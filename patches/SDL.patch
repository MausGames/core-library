diff --git a/VisualC/SDL/SDL.vcxproj b/VisualC/SDL/SDL.vcxproj
index a15978a29..433b31d71 100644
--- a/VisualC/SDL/SDL.vcxproj
+++ b/VisualC/SDL/SDL.vcxproj
@@ -28,6 +28,7 @@
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
     <ConfigurationType>DynamicLibrary</ConfigurationType>
     <PlatformToolset Condition="'$(VisualStudioVersion)' != '10.0'">$(DefaultPlatformToolset)</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
   </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
     <ConfigurationType>DynamicLibrary</ConfigurationType>
@@ -36,6 +37,7 @@
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
     <ConfigurationType>DynamicLibrary</ConfigurationType>
     <PlatformToolset Condition="'$(VisualStudioVersion)' != '10.0'">$(DefaultPlatformToolset)</PlatformToolset>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
   </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
     <ConfigurationType>DynamicLibrary</ConfigurationType>
@@ -182,15 +184,18 @@
       <AdditionalUsingDirectories>%(AdditionalUsingDirectories)</AdditionalUsingDirectories>
       <PreprocessorDefinitions>DLL_EXPORT;NDEBUG;_WINDOWS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
       <BufferSecurityCheck>false</BufferSecurityCheck>
-      <EnableEnhancedInstructionSet>StreamingSIMDExtensions</EnableEnhancedInstructionSet>
+      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
       <WarningLevel>Level4</WarningLevel>
       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
       <PrecompiledHeader>Use</PrecompiledHeader>
       <PrecompiledHeaderFile>SDL_internal.h</PrecompiledHeaderFile>
       <MultiProcessorCompilation>true</MultiProcessorCompilation>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
       <DisableSpecificWarnings>4100;4127;4152;4201</DisableSpecificWarnings>
+      <Optimization>MinSpace</Optimization>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <AdditionalOptions>/utf-8 /Gw /Ob3 /Qfast_transcendentals %(AdditionalOptions)</AdditionalOptions>
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
@@ -201,6 +206,7 @@
       <SubSystem>Windows</SubSystem>
       <OptimizeReferences>true</OptimizeReferences>
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
     </Link>
   </ItemDefinitionGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
@@ -219,12 +225,16 @@
       <BufferSecurityCheck>false</BufferSecurityCheck>
       <WarningLevel>Level4</WarningLevel>
       <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
       <PrecompiledHeader>Use</PrecompiledHeader>
       <PrecompiledHeaderFile>SDL_internal.h</PrecompiledHeaderFile>
       <MultiProcessorCompilation>true</MultiProcessorCompilation>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
       <DisableSpecificWarnings>4100;4127;4152;4201</DisableSpecificWarnings>
+      <Optimization>MinSpace</Optimization>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <AdditionalOptions>/utf-8 /Gw /Ob3 /Qfast_transcendentals /jumptablerdata %(AdditionalOptions)</AdditionalOptions>
     </ClCompile>
     <ResourceCompile>
       <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
@@ -235,6 +245,7 @@
       <SubSystem>Windows</SubSystem>
       <OptimizeReferences>true</OptimizeReferences>
       <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
     </Link>
   </ItemDefinitionGroup>
   <ItemDefinitionGroup Condition="'$(TreatWarningsAsError)'!=''">
@@ -741,4 +752,4 @@
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
   <ImportGroup Label="ExtensionTargets">
   </ImportGroup>
-</Project>
+</Project>
\ No newline at end of file
diff --git a/include/SDL3/SDL_assert.h b/include/SDL3/SDL_assert.h
index 6c90acc02..c25cbff36 100644
--- a/include/SDL3/SDL_assert.h
+++ b/include/SDL3/SDL_assert.h
@@ -1,3 +1,6 @@
+// Modified version for Core Engine
+// Please use the original library from https://www.libsdl.org/
+
 /*
   Simple DirectMedia Layer
   Copyright (C) 1997-2025 Sam Lantinga <slouken@libsdl.org>
@@ -229,11 +232,6 @@ disable assertions.
  * \since This macro is available since SDL 3.2.0.
  */
 #define SDL_NULL_WHILE_LOOP_CONDITION (0)
-
-#elif defined(_MSC_VER)  /* Avoid /W4 warnings. */
-/* "while (0,0)" fools Microsoft's compiler's /W4 warning level into thinking
-    this condition isn't constant. And looks like an owl's face! */
-#define SDL_NULL_WHILE_LOOP_CONDITION (0,0)
 #else
 #define SDL_NULL_WHILE_LOOP_CONDITION (0)
 #endif
@@ -362,7 +360,7 @@ extern SDL_DECLSPEC SDL_AssertState SDLCALL SDL_ReportAssertion(SDL_AssertData *
 #define SDL_enabled_assert(condition) \
     do { \
         while ( !(condition) ) { \
-            static struct SDL_AssertData sdl_assert_data = { 0, 0, #condition, 0, 0, 0, 0 }; \
+            static struct SDL_AssertData sdl_assert_data = { 0, 0, #condition, NULL, 0, NULL, NULL }; \
             const SDL_AssertState sdl_assert_state = SDL_ReportAssertion(&sdl_assert_data, SDL_FUNCTION, SDL_FILE, SDL_LINE); \
             if (sdl_assert_state == SDL_ASSERTION_RETRY) { \
                 continue; /* go again. */ \
@@ -373,6 +371,26 @@ extern SDL_DECLSPEC SDL_AssertState SDLCALL SDL_ReportAssertion(SDL_AssertData *
         } \
     } while (SDL_NULL_WHILE_LOOP_CONDITION)
 
+#if defined(__cplusplus) && (__cplusplus > 202002L)
+#define SDL_assert_core(condition) SDL_enabled_assert(condition)
+#else
+#define SDL_assert_core(condition) \
+    do { \
+        while ( !(condition) ) { \
+            const SDL_AssertState sdl_assert_state = [](const char* pcCondition, const char* pcFunction, const char* pcFile, const int iLine) { \
+                static struct SDL_AssertData sdl_assert_data = { 0, 0, pcCondition, NULL, 0, NULL, NULL }; \
+                return SDL_ReportAssertion(&sdl_assert_data, pcFunction, pcFile, iLine); \
+            }(#condition, SDL_FUNCTION, SDL_FILE, SDL_LINE); \
+            if (sdl_assert_state == SDL_ASSERTION_RETRY) { \
+                continue; /* go again. */ \
+            } else if (sdl_assert_state == SDL_ASSERTION_BREAK) { \
+                SDL_TriggerBreakpoint(); \
+            } \
+            break; /* not retrying. */ \
+        } \
+    } while (SDL_NULL_WHILE_LOOP_CONDITION)
+#endif
+
 #ifdef SDL_WIKI_DOCUMENTATION_SECTION
 
 /**
diff --git a/include/SDL3/SDL_begin_code.h b/include/SDL3/SDL_begin_code.h
index a6b47cf4b..77347a0d6 100644
--- a/include/SDL3/SDL_begin_code.h
+++ b/include/SDL3/SDL_begin_code.h
@@ -1,3 +1,6 @@
+// Modified version for Core Engine
+// Please use the original library from https://www.libsdl.org/
+
 /*
   Simple DirectMedia Layer
   Copyright (C) 1997-2025 Sam Lantinga <slouken@libsdl.org>
@@ -316,7 +319,7 @@
 #  ifdef DLL_EXPORT
 #   define SDL_DECLSPEC __declspec(dllexport)
 #  else
-#   define SDL_DECLSPEC
+#   define SDL_DECLSPEC __declspec(dllimport)
 #  endif
 # else
 #  if defined(__GNUC__) && __GNUC__ >= 4
diff --git a/include/SDL3/SDL_gamepad.h b/include/SDL3/SDL_gamepad.h
index 99f8b6593..49235d7be 100644
--- a/include/SDL3/SDL_gamepad.h
+++ b/include/SDL3/SDL_gamepad.h
@@ -1,3 +1,6 @@
+// Modified version for Core Engine
+// Please use the original library from https://github.com/nigels-com/glew
+
 /*
   Simple DirectMedia Layer
   Copyright (C) 1997-2025 Sam Lantinga <slouken@libsdl.org>
@@ -440,6 +443,9 @@ extern SDL_DECLSPEC bool SDLCALL SDL_ReloadGamepadMappings(void);
  */
 extern SDL_DECLSPEC char ** SDLCALL SDL_GetGamepadMappings(int *count);
 
+/* custom declarations */
+extern SDL_DECLSPEC int SDLCALL SDL_GetGamepadNumMappings(void);
+
 /**
  * Get the gamepad mapping string for a given GUID.
  *
diff --git a/include/SDL3/SDL_pixels.h b/include/SDL3/SDL_pixels.h
index 4127ac06c..395c91229 100644
--- a/include/SDL3/SDL_pixels.h
+++ b/include/SDL3/SDL_pixels.h
@@ -1,3 +1,6 @@
+// Modified version for Core Engine
+// Please use the original library from https://www.libsdl.org/
+
 /*
   Simple DirectMedia Layer
   Copyright (C) 1997-2025 Sam Lantinga <slouken@libsdl.org>
@@ -338,7 +341,7 @@ typedef enum SDL_PackedLayout
  * \sa SDL_BYTESPERPIXEL
  */
 #define SDL_BITSPERPIXEL(format) \
-    (SDL_ISPIXELFORMAT_FOURCC(format) ? 0 : (((format) >> 8) & 0xFF))
+    (SDL_ISPIXELFORMAT_FOURCC(format) ? 0 : (((format) >> 8) & 0xFFu))
 
 /**
  * A macro to determine an SDL_PixelFormat's bytes per pixel.
@@ -363,7 +366,7 @@ typedef enum SDL_PackedLayout
         ((((format) == SDL_PIXELFORMAT_YUY2) || \
           ((format) == SDL_PIXELFORMAT_UYVY) || \
           ((format) == SDL_PIXELFORMAT_YVYU) || \
-          ((format) == SDL_PIXELFORMAT_P010)) ? 2 : 1) : (((format) >> 0) & 0xFF))
+          ((format) == SDL_PIXELFORMAT_P010)) ? 2 : 1) : (((format) >> 0) & 0xFFu))
 
 
 /**
diff --git a/include/SDL3/SDL_video.h b/include/SDL3/SDL_video.h
index 877b9adde..87781f912 100644
--- a/include/SDL3/SDL_video.h
+++ b/include/SDL3/SDL_video.h
@@ -1,3 +1,6 @@
+// Modified version for Core Engine
+// Please use the original library from https://www.libsdl.org/
+
 /*
   Simple DirectMedia Layer
   Copyright (C) 1997-2025 Sam Lantinga <slouken@libsdl.org>
@@ -3251,6 +3254,13 @@ extern SDL_DECLSPEC bool SDLCALL SDL_GL_SetSwapInterval(int interval);
  */
 extern SDL_DECLSPEC bool SDLCALL SDL_GL_GetSwapInterval(int *interval);
 
+/* custom declarations */
+inline int SDL_GL_GetSwapIntervalInline(void)
+{
+    int interval;
+    return SDL_GL_GetSwapInterval(&interval) ? interval : 0;
+}
+
 /**
  * Update a window with OpenGL rendering.
  *
diff --git a/include/build_config/SDL_build_config_android.h b/include/build_config/SDL_build_config_android.h
index a0727f50c..82f6b9569 100644
--- a/include/build_config/SDL_build_config_android.h
+++ b/include/build_config/SDL_build_config_android.h
@@ -142,15 +142,15 @@
 
 /* Enable various audio drivers */
 #ifndef SDL_AUDIO_DISABLED
-#define SDL_AUDIO_DRIVER_OPENSLES 1
-#define SDL_AUDIO_DRIVER_AAUDIO 1
+//#define SDL_AUDIO_DRIVER_OPENSLES 0
+//#define SDL_AUDIO_DRIVER_AAUDIO 0
 #endif /* SDL_AUDIO_DISABLED */
 
 /* Enable various input drivers */
 #ifndef SDL_JOYSTICK_DISABLED
 #define SDL_JOYSTICK_ANDROID 1
 #define SDL_JOYSTICK_HIDAPI 1
-#define SDL_JOYSTICK_VIRTUAL 1
+//#define SDL_JOYSTICK_VIRTUAL 0
 #endif /* SDL_JOYSTICK_DISABLED */
 #ifndef SDL_HAPTIC_DISABLED
 #define SDL_HAPTIC_ANDROID 1
@@ -184,16 +184,16 @@
 #define SDL_VIDEO_OPENGL_ES 1
 #define SDL_VIDEO_OPENGL_ES2 1
 #define SDL_VIDEO_OPENGL_EGL 1
-#define SDL_VIDEO_RENDER_OGL_ES2 1
+//#define SDL_VIDEO_RENDER_OGL_ES2 0
 
 /* Enable Vulkan support */
 #if defined(__ARM_ARCH) && __ARM_ARCH < 7
 /* Android does not support Vulkan in native code using the "armeabi" ABI. */
 #else
-#define SDL_VIDEO_VULKAN 1
-#define SDL_VIDEO_RENDER_VULKAN 1
-#define SDL_GPU_VULKAN 1
-#define SDL_VIDEO_RENDER_GPU 1
+//#define SDL_VIDEO_VULKAN 0
+//#define SDL_VIDEO_RENDER_VULKAN 0
+//#define SDL_GPU_VULKAN 0
+//#define SDL_VIDEO_RENDER_GPU 0
 #endif
 
 /* Enable system power support */
@@ -205,7 +205,7 @@
 
 /* Enable the camera driver */
 #ifndef SDL_CAMERA_DISABLED
-#define SDL_CAMERA_DRIVER_ANDROID 1
+//#define SDL_CAMERA_DRIVER_ANDROID 0
 #endif /* SDL_CAMERA_DISABLED */
 
 /* Enable nl_langinfo and high-res file times on version 26 and higher. */
diff --git a/include/build_config/SDL_build_config_ios.h b/include/build_config/SDL_build_config_ios.h
index be1ec29a1..b0c43c2c7 100644
--- a/include/build_config/SDL_build_config_ios.h
+++ b/include/build_config/SDL_build_config_ios.h
@@ -135,7 +135,7 @@
 #define HAVE_O_CLOEXEC 1
 
 /* enable iPhone version of Core Audio driver */
-#define SDL_AUDIO_DRIVER_COREAUDIO 1
+//#define SDL_AUDIO_DRIVER_COREAUDIO 0
 /* Enable the dummy audio driver (src/audio/dummy/\*.c) */
 #define SDL_AUDIO_DRIVER_DUMMY 1
 
@@ -146,7 +146,7 @@
 /* Only enable HIDAPI support if you want to support Steam Controllers on iOS and tvOS */
 /*#define SDL_JOYSTICK_HIDAPI 1*/
 #define SDL_JOYSTICK_MFI 1
-#define SDL_JOYSTICK_VIRTUAL 1
+//#define SDL_JOYSTICK_VIRTUAL 0
 
 /* Enable various process implementations */
 #define SDL_PROCESS_DUMMY 1
@@ -179,7 +179,7 @@
 #if !TARGET_OS_MACCATALYST && !TARGET_OS_VISION
 #define SDL_VIDEO_OPENGL_ES2 1
 #define SDL_VIDEO_OPENGL_ES 1
-#define SDL_VIDEO_RENDER_OGL_ES2 1
+//#define SDL_VIDEO_RENDER_OGL_ES2 0
 #endif
 
 /* Metal supported on 64-bit devices running iOS 8.0 and tvOS 9.0 and newer
@@ -192,12 +192,12 @@
 #endif
 
 #if SDL_PLATFORM_SUPPORTS_METAL
-#define SDL_VIDEO_METAL 1
-#define SDL_VIDEO_VULKAN 1
-#define SDL_GPU_METAL 1
-#define SDL_GPU_VULKAN 1
-#define SDL_VIDEO_RENDER_METAL 1
-#define SDL_VIDEO_RENDER_GPU 1
+//#define SDL_VIDEO_METAL 0
+//#define SDL_VIDEO_VULKAN 0
+//#define SDL_GPU_METAL 0
+//#define SDL_GPU_VULKAN 0
+//#define SDL_VIDEO_RENDER_METAL 0
+//#define SDL_VIDEO_RENDER_GPU 0
 #endif
 
 /* Enable system power support */
@@ -215,10 +215,10 @@
 
 /* enable camera support */
 #ifndef SDL_PLATFORM_TVOS
-#define SDL_CAMERA_DRIVER_COREMEDIA 1
+//#define SDL_CAMERA_DRIVER_COREMEDIA 0
 #endif
 
-#define SDL_CAMERA_DRIVER_DUMMY 1
+//#define SDL_CAMERA_DRIVER_DUMMY 0
 
 /* Enable dialog subsystem */
 #define SDL_DIALOG_DUMMY 1
diff --git a/include/build_config/SDL_build_config_minimal.h b/include/build_config/SDL_build_config_minimal.h
index d5fe736e9..20282df84 100644
--- a/include/build_config/SDL_build_config_minimal.h
+++ b/include/build_config/SDL_build_config_minimal.h
@@ -93,7 +93,7 @@ typedef unsigned int uintptr_t;
 #define SDL_FSOPS_DUMMY 1
 
 /* Enable the camera driver (src/camera/dummy/\*.c) */
-#define SDL_CAMERA_DRIVER_DUMMY 1
+//#define SDL_CAMERA_DRIVER_DUMMY 0
 
 /* Enable dialog subsystem */
 #define SDL_DIALOG_DUMMY 1
diff --git a/include/build_config/SDL_build_config_windows.h b/include/build_config/SDL_build_config_windows.h
index 442751764..dfd419a51 100644
--- a/include/build_config/SDL_build_config_windows.h
+++ b/include/build_config/SDL_build_config_windows.h
@@ -219,10 +219,10 @@ typedef unsigned int uintptr_t;
 
 /* Enable various audio drivers */
 #if defined(HAVE_MMDEVICEAPI_H) && defined(HAVE_AUDIOCLIENT_H)
-#define SDL_AUDIO_DRIVER_WASAPI 1
+//#define SDL_AUDIO_DRIVER_WASAPI 0
 #endif
-#define SDL_AUDIO_DRIVER_DSOUND 1
-#define SDL_AUDIO_DRIVER_DISK 1
+//#define SDL_AUDIO_DRIVER_DSOUND 0
+//#define SDL_AUDIO_DRIVER_DISK 0
 #define SDL_AUDIO_DRIVER_DUMMY 1
 
 /* Enable various input drivers */
@@ -232,12 +232,12 @@ typedef unsigned int uintptr_t;
 #endif
 #define SDL_JOYSTICK_HIDAPI 1
 #define SDL_JOYSTICK_RAWINPUT 1
-#define SDL_JOYSTICK_VIRTUAL 1
+//#define SDL_JOYSTICK_VIRTUAL 0
 #ifdef HAVE_WINDOWS_GAMING_INPUT_H
 #define SDL_JOYSTICK_WGI 1
 #endif
 #define SDL_JOYSTICK_XINPUT 1
-#define SDL_HAPTIC_DINPUT 1
+//#define SDL_HAPTIC_DINPUT 0
 
 /* Enable various process implementations */
 #define SDL_PROCESS_WINDOWS 1
@@ -265,33 +265,33 @@ typedef unsigned int uintptr_t;
 
 /* Enable various video drivers */
 #define SDL_VIDEO_DRIVER_DUMMY 1
-#define SDL_VIDEO_DRIVER_OFFSCREEN 1
+//#define SDL_VIDEO_DRIVER_OFFSCREEN 0
 #define SDL_VIDEO_DRIVER_WINDOWS 1
-#define SDL_VIDEO_RENDER_D3D 1
+//#define SDL_VIDEO_RENDER_D3D 0
 #ifdef HAVE_D3D11_H
-#define SDL_VIDEO_RENDER_D3D11 1
+//#define SDL_VIDEO_RENDER_D3D11 0
 #endif
-#define SDL_VIDEO_RENDER_D3D12 1
+//#define SDL_VIDEO_RENDER_D3D12 0
 
 /* Enable OpenGL support */
 #define SDL_VIDEO_OPENGL 1
 #define SDL_VIDEO_OPENGL_WGL 1
-#define SDL_VIDEO_RENDER_OGL 1
-#define SDL_VIDEO_RENDER_OGL_ES2 1
+//#define SDL_VIDEO_RENDER_OGL 0
+//#define SDL_VIDEO_RENDER_OGL_ES2 0
 #define SDL_VIDEO_OPENGL_ES2 1
 #define SDL_VIDEO_OPENGL_EGL 1
 
 /* Enable Vulkan support */
-#define SDL_VIDEO_VULKAN 1
-#define SDL_VIDEO_RENDER_VULKAN 1
+//#define SDL_VIDEO_VULKAN 0
+//#define SDL_VIDEO_RENDER_VULKAN 0
 
 /* Enable GPU support */
 #ifdef HAVE_D3D11_H
-#define SDL_GPU_D3D11 1
+//#define SDL_GPU_D3D11 0
 #endif
-#define SDL_GPU_D3D12 1
-#define SDL_GPU_VULKAN 1
-#define SDL_VIDEO_RENDER_GPU 1
+//#define SDL_GPU_D3D12 0
+//#define SDL_GPU_VULKAN 0
+//#define SDL_VIDEO_RENDER_GPU 0
 
 /* Enable system power support */
 #define SDL_POWER_WINDOWS 1
@@ -301,7 +301,13 @@ typedef unsigned int uintptr_t;
 #define SDL_FSOPS_WINDOWS 1
 
 /* Enable the camera driver */
-#define SDL_CAMERA_DRIVER_MEDIAFOUNDATION 1
-#define SDL_CAMERA_DRIVER_DUMMY 1
+//#define SDL_CAMERA_DRIVER_MEDIAFOUNDATION 0
+//#define SDL_CAMERA_DRIVER_DUMMY 0
+
+#define SDL_AUDIO_DISABLED 1
+#define SDL_RENDER_DISABLED 1
+#define SDL_GPU_DISABLED 1
+#define SDL_HAPTIC_DISABLED 1
+#define SDL_CAMERA_DISABLED 1
 
 #endif /* SDL_build_config_windows_h_ */
diff --git a/src/cpuinfo/SDL_cpuinfo.c b/src/cpuinfo/SDL_cpuinfo.c
index b83653280..f33f88832 100644
--- a/src/cpuinfo/SDL_cpuinfo.c
+++ b/src/cpuinfo/SDL_cpuinfo.c
@@ -659,6 +659,11 @@ int SDL_GetNumLogicalCPUCores(void)
             // Meaning that the New3DS has 3 available core, and the Old3DS only one.
             SDL_NumLogicalCPUCores = isNew3DS ? 4 : 2;
         }
+#endif
+#ifdef SDL_PLATFORM_PRIVATE
+        if (SDL_NumLogicalCPUCores <= 0) {
+            SDL_NumLogicalCPUCores = SDL_PRIVATE_CPU_CORES;
+        }
 #endif
         // There has to be at least 1, right? :)
         if (SDL_NumLogicalCPUCores <= 0) {
diff --git a/src/dynapi/SDL_dynapi.sym b/src/dynapi/SDL_dynapi.sym
index 73f34843d..8d64f9367 100644
--- a/src/dynapi/SDL_dynapi.sym
+++ b/src/dynapi/SDL_dynapi.sym
@@ -1234,6 +1234,7 @@ SDL3_0.0.0 {
     SDL_ClickTrayEntry;
     SDL_UpdateTrays;
     SDL_StretchSurface;
+    SDL_GetGamepadNumMappings;
     # extra symbols go here (don't modify this line)
   local: *;
 };
diff --git a/src/dynapi/SDL_dynapi_overrides.h b/src/dynapi/SDL_dynapi_overrides.h
index 77fd553c4..18afcaf12 100644
--- a/src/dynapi/SDL_dynapi_overrides.h
+++ b/src/dynapi/SDL_dynapi_overrides.h
@@ -1259,3 +1259,4 @@
 #define SDL_ClickTrayEntry SDL_ClickTrayEntry_REAL
 #define SDL_UpdateTrays SDL_UpdateTrays_REAL
 #define SDL_StretchSurface SDL_StretchSurface_REAL
+#define SDL_GetGamepadNumMappings SDL_GetGamepadNumMappings_REAL
diff --git a/src/dynapi/SDL_dynapi_procs.h b/src/dynapi/SDL_dynapi_procs.h
index e86ac2a32..56136d942 100644
--- a/src/dynapi/SDL_dynapi_procs.h
+++ b/src/dynapi/SDL_dynapi_procs.h
@@ -1267,3 +1267,4 @@ SDL_DYNAPI_PROC(bool,SDL_AudioStreamDevicePaused,(SDL_AudioStream *a),(a),return
 SDL_DYNAPI_PROC(void,SDL_ClickTrayEntry,(SDL_TrayEntry *a),(a),)
 SDL_DYNAPI_PROC(void,SDL_UpdateTrays,(void),(),)
 SDL_DYNAPI_PROC(bool,SDL_StretchSurface,(SDL_Surface *a,const SDL_Rect *b,SDL_Surface *c,const SDL_Rect *d,SDL_ScaleMode e),(a,b,c,d,e),return)
+SDL_DYNAPI_PROC(int,SDL_GetGamepadNumMappings,(void),(),return)
diff --git a/src/events/SDL_events.c b/src/events/SDL_events.c
index eff205f71..a4a86d6ec 100644
--- a/src/events/SDL_events.c
+++ b/src/events/SDL_events.c
@@ -1908,23 +1908,7 @@ void SDL_SendAppEvent(SDL_EventType eventType)
         event.type = eventType;
         event.common.timestamp = 0;
 
-        switch (eventType) {
-        case SDL_EVENT_TERMINATING:
-        case SDL_EVENT_LOW_MEMORY:
-        case SDL_EVENT_WILL_ENTER_BACKGROUND:
-        case SDL_EVENT_DID_ENTER_BACKGROUND:
-        case SDL_EVENT_WILL_ENTER_FOREGROUND:
-        case SDL_EVENT_DID_ENTER_FOREGROUND:
-            // We won't actually queue this event, it needs to be handled in this call stack by an event watcher
-            if (SDL_EventLoggingVerbosity > 0) {
-                SDL_LogEvent(&event);
-            }
-            SDL_CallEventWatchers(&event);
-            break;
-        default:
-            SDL_PushEvent(&event);
-            break;
-        }
+        SDL_PushEvent(&event);
     }
 }
 
diff --git a/src/io/SDL_iostream.c b/src/io/SDL_iostream.c
index 989f3b9c4..fd663c1eb 100644
--- a/src/io/SDL_iostream.c
+++ b/src/io/SDL_iostream.c
@@ -80,7 +80,7 @@ typedef struct IOStreamWindowsData
 #define INVALID_SET_FILE_POINTER 0xFFFFFFFF
 #endif
 
-#define READAHEAD_BUFFER_SIZE 1024
+#define READAHEAD_BUFFER_SIZE (0x1000)
 
 static HANDLE SDLCALL windows_file_open(const char *filename, const char *mode)
 {
@@ -122,7 +122,7 @@ static HANDLE SDLCALL windows_file_open(const char *filename, const char *mode)
                        (w_right) ? 0 : FILE_SHARE_READ,
                        NULL,
                        (must_exist | truncate | a_mode),
-                       FILE_ATTRIBUTE_NORMAL,
+                       FILE_ATTRIBUTE_NORMAL | FILE_FLAG_SEQUENTIAL_SCAN,
                        NULL);
         SDL_free(str);
     }
@@ -1140,7 +1140,7 @@ bool SDL_CloseIO(SDL_IOStream *iostr)
 // Load all the data from an SDL data stream
 void *SDL_LoadFile_IO(SDL_IOStream *src, size_t *datasize, bool closeio)
 {
-    const int FILE_CHUNK_SIZE = 1024;
+    const int FILE_CHUNK_SIZE = 0x1000;
     Sint64 size, size_total = 0;
     size_t size_read;
     char *data = NULL, *newdata;
diff --git a/src/joystick/SDL_gamepad.c b/src/joystick/SDL_gamepad.c
index 86dd06276..31cb4d571 100644
--- a/src/joystick/SDL_gamepad.c
+++ b/src/joystick/SDL_gamepad.c
@@ -2268,6 +2268,24 @@ char **SDL_GetGamepadMappings(int *count)
     return result;
 }
 
+int SDL_GetGamepadNumMappings(void)
+{
+    int num_mappings = 0;
+
+    SDL_LockJoysticks();
+
+    for (GamepadMapping_t *mapping = s_pSupportedGamepads; mapping; mapping = mapping->next) {
+        if (SDL_memcmp(&mapping->guid, &s_zeroGUID, sizeof(mapping->guid)) == 0) {
+            continue;
+        }
+        num_mappings++;
+    }
+
+    SDL_UnlockJoysticks();
+
+    return num_mappings;
+}
+
 /*
  * Get the mapping string for this GUID
  */
diff --git a/src/video/SDL_blit_slow.c b/src/video/SDL_blit_slow.c
index d0dd4cf32..bca1e1fbf 100644
--- a/src/video/SDL_blit_slow.c
+++ b/src/video/SDL_blit_slow.c
@@ -429,27 +429,31 @@ static void ReadFloatPixel(Uint8 *pixels, SlowBlitPixelAccess access, const SDL_
     float fR = 0.0f, fG = 0.0f, fB = 0.0f, fA = 0.0f;
     float v[4];
 
+    const float div1 = 1.0f / 255.0f;
+    const float div2 = 1.0f / (float)SDL_MAX_UINT16;
+    const float div3 = 1.0f / SDR_white_point;
+
     switch (access) {
     case SlowBlitPixelAccess_Index8:
         pixel = *pixels;
-        fR = (float)pal->colors[pixel].r / 255.0f;
-        fG = (float)pal->colors[pixel].g / 255.0f;
-        fB = (float)pal->colors[pixel].b / 255.0f;
-        fA = (float)pal->colors[pixel].a / 255.0f;
+        fR = (float)pal->colors[pixel].r * div1;
+        fG = (float)pal->colors[pixel].g * div1;
+        fB = (float)pal->colors[pixel].b * div1;
+        fA = (float)pal->colors[pixel].a * div1;
         break;
     case SlowBlitPixelAccess_RGB:
         DISEMBLE_RGB(pixels, fmt->bytes_per_pixel, fmt, pixel, R, G, B);
-        fR = (float)R / 255.0f;
-        fG = (float)G / 255.0f;
-        fB = (float)B / 255.0f;
+        fR = (float)R * div1;
+        fG = (float)G * div1;
+        fB = (float)B * div1;
         fA = 1.0f;
         break;
     case SlowBlitPixelAccess_RGBA:
         DISEMBLE_RGBA(pixels, fmt->bytes_per_pixel, fmt, pixel, R, G, B, A);
-        fR = (float)R / 255.0f;
-        fG = (float)G / 255.0f;
-        fB = (float)B / 255.0f;
-        fA = (float)A / 255.0f;
+        fR = (float)R * div1;
+        fG = (float)G * div1;
+        fB = (float)B * div1;
+        fA = (float)A * div1;
         break;
     case SlowBlitPixelAccess_10Bit:
         pixel = *((Uint32 *)pixels);
@@ -476,11 +480,11 @@ static void ReadFloatPixel(Uint8 *pixels, SlowBlitPixelAccess access, const SDL_
     case SlowBlitPixelAccess_Large:
         switch (SDL_PIXELTYPE(fmt->format)) {
         case SDL_PIXELTYPE_ARRAYU16:
-            v[0] = (float)(((Uint16 *)pixels)[0]) / SDL_MAX_UINT16;
-            v[1] = (float)(((Uint16 *)pixels)[1]) / SDL_MAX_UINT16;
-            v[2] = (float)(((Uint16 *)pixels)[2]) / SDL_MAX_UINT16;
+            v[0] = (float)(((Uint16 *)pixels)[0]) * div2;
+            v[1] = (float)(((Uint16 *)pixels)[1]) * div2;
+            v[2] = (float)(((Uint16 *)pixels)[2]) * div2;
             if (fmt->bytes_per_pixel == 8) {
-                v[3] = (float)(((Uint16 *)pixels)[3]) / SDL_MAX_UINT16;
+                v[3] = (float)(((Uint16 *)pixels)[3]) * div2;
             } else {
                 v[3] = 1.0f;
             }
@@ -563,14 +567,14 @@ static void ReadFloatPixel(Uint8 *pixels, SlowBlitPixelAccess access, const SDL_
         fB = SDL_sRGBtoLinear(fB);
         break;
     case SDL_TRANSFER_CHARACTERISTICS_PQ:
-        fR = SDL_PQtoNits(fR) / SDR_white_point;
-        fG = SDL_PQtoNits(fG) / SDR_white_point;
-        fB = SDL_PQtoNits(fB) / SDR_white_point;
+        fR = SDL_PQtoNits(fR) * div3;
+        fG = SDL_PQtoNits(fG) * div3;
+        fB = SDL_PQtoNits(fB) * div3;
         break;
     case SDL_TRANSFER_CHARACTERISTICS_LINEAR:
-        fR /= SDR_white_point;
-        fG /= SDR_white_point;
-        fB /= SDR_white_point;
+        fR *= div3;
+        fG *= div3;
+        fB *= div3;
         break;
     default:
         // Unknown, leave it alone
diff --git a/src/video/SDL_egl.c b/src/video/SDL_egl.c
index 86502549b..a0f4c644f 100644
--- a/src/video/SDL_egl.c
+++ b/src/video/SDL_egl.c
@@ -946,7 +946,7 @@ bool SDL_EGL_ChooseConfig(SDL_VideoDevice *_this)
 SDL_GLContext SDL_EGL_CreateContext(SDL_VideoDevice *_this, EGLSurface egl_surface)
 {
     // max 16 key+value pairs plus terminator.
-    EGLint attribs[33];
+    EGLint attribs[37];
     int attr = 0;
 
     EGLContext egl_context, share_context = EGL_NO_CONTEXT;
@@ -1026,8 +1026,26 @@ SDL_GLContext SDL_EGL_CreateContext(SDL_VideoDevice *_this, EGLSurface egl_surfa
         }
     }
 
+#ifdef EGL_KHR_context_flush_control
+    if (_this->gl_config.release_behavior == 0) {
+        if (SDL_EGL_HasExtension(_this, SDL_EGL_DISPLAY_EXTENSION, "EGL_KHR_context_flush_control")) {
+            attribs[attr++] = EGL_CONTEXT_RELEASE_BEHAVIOR_KHR;
+            attribs[attr++] = _this->gl_config.release_behavior ? EGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR : EGL_CONTEXT_RELEASE_BEHAVIOR_NONE_KHR;
+        }
+    }
+#endif
+
+#ifdef EGL_EXT_create_context_robustness
+    if (_this->gl_config.reset_notification != 0) {
+        if (SDL_EGL_HasExtension(_this, SDL_EGL_DISPLAY_EXTENSION, "EGL_EXT_create_context_robustness")) {
+            attribs[attr++] = EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT;
+            attribs[attr++] = _this->gl_config.reset_notification ? EGL_LOSE_CONTEXT_ON_RESET_EXT : EGL_NO_RESET_NOTIFICATION_EXT;
+        }
+    }
+#endif
+
 #ifdef EGL_KHR_create_context_no_error
-    if (_this->gl_config.no_error) {
+    if (_this->gl_config.no_error != 0) {
         if (SDL_EGL_HasExtension(_this, SDL_EGL_DISPLAY_EXTENSION, "EGL_KHR_create_context_no_error")) {
             attribs[attr++] = EGL_CONTEXT_OPENGL_NO_ERROR_KHR;
             attribs[attr++] = _this->gl_config.no_error;
diff --git a/src/video/SDL_video.c b/src/video/SDL_video.c
index abeb2cb6b..e815b08bb 100644
--- a/src/video/SDL_video.c
+++ b/src/video/SDL_video.c
@@ -1396,7 +1396,7 @@ bool SDL_GetClosestFullscreenDisplayMode(SDL_DisplayID displayID, int w, int h,
             continue;
         }
         if (closest) {
-            float current_aspect_ratio = (float)mode->w / mode->h;
+            float current_aspect_ratio = (float)mode->w * (1.0f / (float)mode->h);
             float closest_aspect_ratio = (float)closest->w / closest->h;
             if (SDL_fabsf(aspect_ratio - closest_aspect_ratio) < SDL_fabsf(aspect_ratio - current_aspect_ratio)) {
                 // The mode we already found has a better aspect ratio match
diff --git a/src/video/wayland/SDL_waylandopengles.c b/src/video/wayland/SDL_waylandopengles.c
index ac2b06dd0..ee05586d9 100644
--- a/src/video/wayland/SDL_waylandopengles.c
+++ b/src/video/wayland/SDL_waylandopengles.c
@@ -190,10 +190,10 @@ bool Wayland_GLES_MakeCurrent(SDL_VideoDevice *_this, SDL_Window *window, SDL_GL
 {
     bool result;
 
-    if (window && context) {
+    if (window) {
         result = SDL_EGL_MakeCurrent(_this, window->internal->egl_surface, context);
     } else {
-        result = SDL_EGL_MakeCurrent(_this, NULL, NULL);
+        result = SDL_EGL_MakeCurrent(_this, NULL, context);
     }
 
     WAYLAND_wl_display_flush(_this->internal->display);
diff --git a/src/video/windows/SDL_windowsopengl.c b/src/video/windows/SDL_windowsopengl.c
index c45879604..b5d680327 100644
--- a/src/video/windows/SDL_windowsopengl.c
+++ b/src/video/windows/SDL_windowsopengl.c
@@ -412,6 +412,7 @@ void WIN_GL_InitExtensions(SDL_VideoDevice *_this)
 {
     /* *INDENT-OFF* */ // clang-format off
     const char *(WINAPI * wglGetExtensionsStringARB)(HDC) = 0;
+    const char *(WINAPI * wglGetExtensionsStringEXT)() = 0;
     /* *INDENT-ON* */ // clang-format on
     const char *extensions;
     HWND hwnd;
@@ -450,7 +451,13 @@ void WIN_GL_InitExtensions(SDL_VideoDevice *_this)
     if (wglGetExtensionsStringARB) {
         extensions = wglGetExtensionsStringARB(hdc);
     } else {
-        extensions = NULL;
+        wglGetExtensionsStringEXT = (const char *(WINAPI *) ())
+            _this->gl_data->wglGetProcAddress("wglGetExtensionsStringEXT");
+        if (wglGetExtensionsStringEXT) {
+            extensions = wglGetExtensionsStringEXT();
+        } else {
+            extensions = NULL;
+        }
     }
 
     // Check for WGL_ARB_pixel_format
diff --git a/src/video/x11/SDL_x11opengl.c b/src/video/x11/SDL_x11opengl.c
index d46409f47..13b5abc31 100644
--- a/src/video/x11/SDL_x11opengl.c
+++ b/src/video/x11/SDL_x11opengl.c
@@ -906,7 +906,7 @@ bool X11_GL_MakeCurrent(SDL_VideoDevice *_this, SDL_Window *window, SDL_GLContex
 {
     Display *display = _this->internal->display;
     Window drawable =
-        (context ? window->internal->xwindow : None);
+        (window ? window->internal->xwindow : None);
     GLXContext glx_context = (GLXContext)context;
     int rc;
 
